From cb3d78f14b07539a55f1f84bf26984d78118cb0c Mon Sep 17 00:00:00 2001
From: Milos Ratkovic <milosr@gmail.com>
Date: Tue, 17 Apr 2018 01:17:09 +0200
Subject: [PATCH 17/23] Camera: check metadata type before releasing frame

Hidl method releaseRecordingFrameHandle fails for metadata
type other than kMetadataBufferTypeNativeHandleSource which
prevents older devices to record video.

Change-Id: I0e84883bdb636e965526ca1282216baef43e87e8
---
 .../libcameraservice/device1/CameraHardwareInterface.cpp | 16 ++++++++++------
 1 file changed, 10 insertions(+), 6 deletions(-)

diff --git a/services/camera/libcameraservice/device1/CameraHardwareInterface.cpp b/services/camera/libcameraservice/device1/CameraHardwareInterface.cpp
index 62ef681..9d6aeec 100644
--- a/services/camera/libcameraservice/device1/CameraHardwareInterface.cpp
+++ b/services/camera/libcameraservice/device1/CameraHardwareInterface.cpp
@@ -591,12 +591,16 @@ void CameraHardwareInterface::releaseRecordingFrame(const sp<IMemory>& mem)
             //       Either document why it is safe in this case or address the
             //       issue (e.g. by copying).
             VideoNativeHandleMetadata* md = (VideoNativeHandleMetadata*) mem->unsecurePointer();
-            // Caching the handle here because md->pHandle will be subject to HAL's edit
-            native_handle_t* nh = md->pHandle;
-            hidl_handle frame = nh;
-            mHidlDevice->releaseRecordingFrameHandle(heapId, bufferIndex, frame);
-            native_handle_close(nh);
-            native_handle_delete(nh);
+            if (md->eType == kMetadataBufferTypeNativeHandleSource) {
+                // Caching the handle here because md->pHandle will be subject to HAL's edit
+                native_handle_t* nh = md->pHandle;
+                hidl_handle frame = nh;
+                mHidlDevice->releaseRecordingFrameHandle(heapId, bufferIndex, frame);
+                native_handle_close(nh);
+                native_handle_delete(nh);
+            } else {
+                mHidlDevice->releaseRecordingFrame(heapId, bufferIndex);
+            }
         } else {
             mHidlDevice->releaseRecordingFrame(heapId, bufferIndex);
         }
-- 
2.7.4

